services:
- type: web
  name: apartment-reviews-app
  env: python
  repo: https://github.com/RejectsReviews/Apartment-Reviews-App.git
  plan: free
  branch: main
  buildCommand: "pip install -r requirements.txt && python -m flask db init || true && python -m flask db migrate || true && python -m flask db upgrade"
  startCommand: "gunicorn -c gunicorn_config.py wsgi:app"
  envVars:
  - key: FLASK_APP
    value: App/main.py
  - key: ENV
    value: production
  - key: SECRET_KEY
    generateValue: true
  - key: DATABASE_URL
    fromDatabase:
      name: apartment-reviews-db
      property: connectionString
      append: "?sslmode=disable"
  - key: POSTGRES_URL
    fromDatabase:
      name: apartment-reviews-db
      property: host
  - key: POSTGRES_USER
    fromDatabase:
      name: apartment-reviews-db
      property: user
  - key: POSTGRES_PASSWORD
    fromDatabase:
      name: apartment-reviews-db
      property: password
  - key: POSTGRES_DB
    fromDatabase:
      name: apartment-reviews-db
      property: database
  - key: SSL_MODE
    value: disable
  - key: USE_SQLITE_FALLBACK
    value: true
  - key: PGSSLMODE
    value: disable

envVarGroups:
- name: flask-postgres-api-settings
  envVars:
  - key: ENV
    value: production
  - key: FLASK_APP
    value: wsgi.py
    

databases:
- name: apartment-reviews-db
  plan: free
  databaseName: apartment_reviews
  ipAllowList: []  # only allow internal connections